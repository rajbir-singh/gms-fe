{"version":3,"sources":["ng://angular-web-storage/src/util.ts","ng://angular-web-storage/src/decorator.ts","ng://angular-web-storage/src/service.ts","ng://angular-web-storage/src/module.ts"],"names":["StorageUtil","get","storage","key","value","parse","getItem","_expired","Date","remove","_value","set","expiredAt","expiredUnit","setItem","stringify","getExpired","removeItem","index","val","unit","now","JSON","text","e","cache","WebStorage","target","propertyName","Object","defineProperty","enumerable","configurable","StorageService","this","prototype","_this","next","ls","test","push","forEach","v","clear","LocalStorageService","_super","call","localStorage","__extends","Injectable","args","providedIn","SessionStorageService","sessionStorage","AngularWebStorageModule","NgModule","LocalStorage","SessionStorage"],"mappings":"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","sourcesContent":["/**\r\n * è¿ææ¶é´åä½\r\n * sï¼ç§\r\n * mï¼å\r\n * hï¼æ¶\r\n * dï¼å¤©\r\n * wï¼å¨\r\n * yï¼å¹´\r\n * tï¼èªå®ä¹ï¼æ¯«ç§msï¼\r\n */\r\nexport type ExpiredUnit = 's' | 'm' | 'h' | 'd' | 'w' | 'y' | 't';\r\n\r\nexport class StorageUtil {\r\n  static get(storage: Storage, key: string) {\r\n    const value = StorageUtil.parse(storage.getItem(key) || 'null') || null;\r\n    if (value === null) return null;\r\n    if (\r\n      typeof value === 'object' &&\r\n      typeof value._expired !== 'undefined' &&\r\n      value._expired !== 0 &&\r\n      +new Date() > value._expired\r\n    ) {\r\n      StorageUtil.remove(storage, key);\r\n      return null;\r\n    }\r\n\r\n    return value._value || null;\r\n  }\r\n\r\n  static set(\r\n    storage: Storage,\r\n    key: string,\r\n    value: any,\r\n    expiredAt: number = 0,\r\n    expiredUnit: ExpiredUnit = 't',\r\n  ) {\r\n    storage.setItem(\r\n      key,\r\n      StorageUtil.stringify({\r\n        _expired: StorageUtil.getExpired(expiredAt, expiredUnit),\r\n        _value: value,\r\n      }),\r\n    );\r\n  }\r\n\r\n  static remove(storage: Storage, key: string) {\r\n    storage.removeItem(key);\r\n  }\r\n\r\n  static key(storage: Storage, index: number) {\r\n    return storage.key(index);\r\n  }\r\n\r\n  private static getExpired(val: number, unit: ExpiredUnit): number {\r\n    if (val <= 0) return 0;\r\n    const now = +new Date();\r\n    switch (unit) {\r\n      case 's': // ç§\r\n        return now + 1000 * val;\r\n      case 'm': // å\r\n        return now + 1000 * 60 * val;\r\n      case 'h': // æ¶\r\n        return now + 1000 * 60 * 60 * val;\r\n      case 'd': // å¤©\r\n        return now + 1000 * 60 * 60 * 24 * val;\r\n      case 'w': // å¨\r\n        return now + 1000 * 60 * 60 * 24 * 7 * val;\r\n      case 'y': // å¹´\r\n        return now + 1000 * 60 * 60 * 24 * 365 * val;\r\n      case 't': // èªå®ä¹\r\n        return now + val;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private static stringify(value: any) {\r\n    return JSON.stringify(value);\r\n  }\r\n\r\n  private static parse(text: string) {\r\n    try {\r\n      return JSON.parse(text) || null;\r\n    } catch (e) {\r\n      return text;\r\n    }\r\n  }\r\n}\r\n","import { ExpiredUnit, StorageUtil } from './util';\r\n\r\ninterface ICache {\r\n  [key: string]: boolean;\r\n}\r\nconst cache: ICache = {};\r\n\r\nfunction WebStorage(\r\n  storage: Storage,\r\n  key: string,\r\n  expiredAt: number = 0,\r\n  expiredUnit: ExpiredUnit = 'd',\r\n) {\r\n  return (target: Object, propertyName: string): void => {\r\n    key = key || propertyName;\r\n    Object.defineProperty(target, propertyName, {\r\n      get: () => {\r\n        return StorageUtil.get(storage, <string>key);\r\n      },\r\n      set: (value: any) => {\r\n        if (!cache[<string>key]) {\r\n          const storedValue = StorageUtil.get(storage, <string>key);\r\n          if (storedValue === null) {\r\n            StorageUtil.set(\r\n              storage,\r\n              <string>key,\r\n              value,\r\n              expiredAt,\r\n              expiredUnit,\r\n            );\r\n          }\r\n          cache[<string>key] = true;\r\n          return;\r\n        }\r\n        StorageUtil.set(storage, <string>key, value, expiredAt, expiredUnit);\r\n      },\r\n      enumerable: true,\r\n      configurable: true,\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * localStorage è£é¥°å¨\r\n *\r\n * @param [key] æå®ä¸ä¸ªæ°key\r\n * @param [expiredAt=0] è¿ææ¶é´å¼ï¼0è¡¨ç¤ºæ°¸ä¹ææã\r\n * @param [expiredUnit='t'] è¿ææ¶é´åä½ï¼é»è®¤ï¼èªå®ä¹[åä½ï¼æ¯«ç§]ï¼\r\n */\r\nexport function LocalStorage(\r\n  key?: string,\r\n  expiredAt: number = 0,\r\n  expiredUnit: ExpiredUnit = 't',\r\n) {\r\n  return WebStorage(localStorage, key, expiredAt, expiredUnit);\r\n}\r\n\r\n/**\r\n * sessionStorage è£é¥°å¨\r\n *\r\n * @param [key] æå®ä¸ä¸ªæ°key\r\n * @param [expiredAt=0] è¿ææ¶é´å¼ï¼0è¡¨ç¤ºå¨ `sessionStorage` æææ¶æèå´åæ°¸ä¹ææã\r\n * @param [expiredUnit='t'] è¿ææ¶é´åä½ï¼é»è®¤ï¼èªå®ä¹[åä½ï¼æ¯«ç§]ï¼\r\n */\r\nexport function SessionStorage(\r\n  key?: string,\r\n  expiredAt: number = 0,\r\n  expiredUnit: ExpiredUnit = 't',\r\n) {\r\n  return WebStorage(sessionStorage, key, expiredAt, expiredUnit);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StorageUtil, ExpiredUnit } from './util';\r\n\r\nexport class StorageService {\r\n  constructor(private storage: Storage) {}\r\n\r\n  get(key: string) {\r\n    return StorageUtil.get(this.storage, key);\r\n  }\r\n\r\n  set(\r\n    key: string,\r\n    value: any,\r\n    expiredAt: number = 0,\r\n    expiredUnit: ExpiredUnit = 'd',\r\n  ) {\r\n    return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);\r\n  }\r\n\r\n  /**\r\n   * å é¤æå®keyï¼å¦ï¼\r\n   * - `remove('key')` å é¤ `key` é®\r\n   * - `remove(/BMap_\\w+/)` æ¹éå é¤ææ BMap_ å¼å¤´çé®\r\n   * @param key é®åææ­£åè¡¨è¾¾å¼\r\n   */\r\n  remove(key: string | RegExp) {\r\n    if (typeof key === 'string') {\r\n      StorageUtil.remove(this.storage, key);\r\n      return;\r\n    }\r\n    let index = 0;\r\n    let next = StorageUtil.key(this.storage, index);\r\n    const ls: string[] = [];\r\n    while (next) {\r\n      if (key.test(next)) ls.push(next);\r\n      next = StorageUtil.key(this.storage, ++index);\r\n    }\r\n    ls.forEach(v => StorageUtil.remove(this.storage, v));\r\n  }\r\n\r\n  clear() {\r\n    this.storage.clear();\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalStorageService extends StorageService {\r\n  constructor() {\r\n    super(localStorage);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SessionStorageService extends StorageService {\r\n  constructor() {\r\n    super(sessionStorage);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class AngularWebStorageModule {}\r\n"]}