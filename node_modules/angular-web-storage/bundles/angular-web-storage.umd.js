(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('angular-web-storage', ['exports', '@angular/core'], factory) :
    (factory((global['angular-web-storage'] = {}),global.ng.core));
}(this, (function (exports,i0) { 'use strict';

    var StorageUtil = /** @class */ (function () {
        function StorageUtil() {
        }
        StorageUtil.get = function (storage, key) {
            var value = StorageUtil.parse(storage.getItem(key) || 'null') || null;
            if (value === null)
                return null;
            if (typeof value === 'object' &&
                typeof value._expired !== 'undefined' &&
                value._expired !== 0 &&
                +new Date() > value._expired) {
                StorageUtil.remove(storage, key);
                return null;
            }
            return value._value || null;
        };
        StorageUtil.set = function (storage, key, value, expiredAt, expiredUnit) {
            if (expiredAt === void 0) {
                expiredAt = 0;
            }
            if (expiredUnit === void 0) {
                expiredUnit = 't';
            }
            storage.setItem(key, StorageUtil.stringify({
                _expired: StorageUtil.getExpired(expiredAt, expiredUnit),
                _value: value,
            }));
        };
        StorageUtil.remove = function (storage, key) {
            storage.removeItem(key);
        };
        StorageUtil.key = function (storage, index) {
            return storage.key(index);
        };
        StorageUtil.getExpired = function (val, unit) {
            if (val <= 0)
                return 0;
            var now = +new Date();
            switch (unit) {
                case 's': // 秒
                    return now + 1000 * val;
                case 'm': // 分
                    return now + 1000 * 60 * val;
                case 'h': // 时
                    return now + 1000 * 60 * 60 * val;
                case 'd': // 天
                    return now + 1000 * 60 * 60 * 24 * val;
                case 'w': // 周
                    return now + 1000 * 60 * 60 * 24 * 7 * val;
                case 'y': // 年
                    return now + 1000 * 60 * 60 * 24 * 365 * val;
                case 't': // 自定义
                    return now + val;
            }
            return 0;
        };
        StorageUtil.stringify = function (value) {
            return JSON.stringify(value);
        };
        StorageUtil.parse = function (text) {
            try {
                return JSON.parse(text) || null;
            }
            catch (e) {
                return text;
            }
        };
        return StorageUtil;
    }());

    var cache = {};
    function WebStorage(storage, key, expiredAt, expiredUnit) {
        if (expiredAt === void 0) {
            expiredAt = 0;
        }
        if (expiredUnit === void 0) {
            expiredUnit = 'd';
        }
        return function (target, propertyName) {
            key = key || propertyName;
            Object.defineProperty(target, propertyName, {
                get: function () {
                    return StorageUtil.get(storage, key);
                },
                set: function (value) {
                    if (!cache[key]) {
                        var storedValue = StorageUtil.get(storage, key);
                        if (storedValue === null) {
                            StorageUtil.set(storage, key, value, expiredAt, expiredUnit);
                        }
                        cache[key] = true;
                        return;
                    }
                    StorageUtil.set(storage, key, value, expiredAt, expiredUnit);
                },
                enumerable: true,
                configurable: true,
            });
        };
    }
    /**
     * localStorage 装饰器
     *
     * @param [key] 指定一个新key
     * @param [expiredAt=0] 过期时间值，0表示永久有效。
     * @param [expiredUnit='t'] 过期时间单位（默认：自定义[单位：毫秒]）
     */
    function LocalStorage(key, expiredAt, expiredUnit) {
        if (expiredAt === void 0) {
            expiredAt = 0;
        }
        if (expiredUnit === void 0) {
            expiredUnit = 't';
        }
        return WebStorage(localStorage, key, expiredAt, expiredUnit);
    }
    /**
     * sessionStorage 装饰器
     *
     * @param [key] 指定一个新key
     * @param [expiredAt=0] 过期时间值，0表示在 `sessionStorage` 有效时期范围内永久有效。
     * @param [expiredUnit='t'] 过期时间单位（默认：自定义[单位：毫秒]）
     */
    function SessionStorage(key, expiredAt, expiredUnit) {
        if (expiredAt === void 0) {
            expiredAt = 0;
        }
        if (expiredUnit === void 0) {
            expiredUnit = 't';
        }
        return WebStorage(sessionStorage, key, expiredAt, expiredUnit);
    }

    var __extends = (this && this.__extends) || (function () {
        var extendStatics = function (d, b) {
            extendStatics = Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                function (d, b) { for (var p in b)
                    if (b.hasOwnProperty(p))
                        d[p] = b[p]; };
            return extendStatics(d, b);
        };
        return function (d, b) {
            extendStatics(d, b);
            function __() { this.constructor = d; }
            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
    })();
    var StorageService = /** @class */ (function () {
        function StorageService(storage) {
            this.storage = storage;
        }
        StorageService.prototype.get = function (key) {
            return StorageUtil.get(this.storage, key);
        };
        StorageService.prototype.set = function (key, value, expiredAt, expiredUnit) {
            if (expiredAt === void 0) {
                expiredAt = 0;
            }
            if (expiredUnit === void 0) {
                expiredUnit = 'd';
            }
            return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);
        };
        /**
         * 删除指定key，如：
         * - `remove('key')` 删除 `key` 键
         * - `remove(/BMap_\w+/)` 批量删除所有 BMap_ 开头的键
         * @param key 键名或正则表达式
         */
        StorageService.prototype.remove = function (key) {
            var _this = this;
            if (typeof key === 'string') {
                StorageUtil.remove(this.storage, key);
                return;
            }
            var index = 0;
            var next = StorageUtil.key(this.storage, index);
            var ls = [];
            while (next) {
                if (key.test(next))
                    ls.push(next);
                next = StorageUtil.key(this.storage, ++index);
            }
            ls.forEach(function (v) { return StorageUtil.remove(_this.storage, v); });
        };
        StorageService.prototype.clear = function () {
            this.storage.clear();
        };
        return StorageService;
    }());
    var LocalStorageService = /** @class */ (function (_super) {
        __extends(LocalStorageService, _super);
        function LocalStorageService() {
            return _super.call(this, localStorage) || this;
        }
        LocalStorageService.decorators = [
            { type: i0.Injectable, args: [{ providedIn: 'root' },] }
        ];
        /** @nocollapse */
        LocalStorageService.ctorParameters = function () { return []; };
        LocalStorageService.ngInjectableDef = i0.defineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: "root" });
        return LocalStorageService;
    }(StorageService));
    var SessionStorageService = /** @class */ (function (_super) {
        __extends(SessionStorageService, _super);
        function SessionStorageService() {
            return _super.call(this, sessionStorage) || this;
        }
        SessionStorageService.decorators = [
            { type: i0.Injectable, args: [{ providedIn: 'root' },] }
        ];
        /** @nocollapse */
        SessionStorageService.ctorParameters = function () { return []; };
        SessionStorageService.ngInjectableDef = i0.defineInjectable({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: "root" });
        return SessionStorageService;
    }(StorageService));

    var AngularWebStorageModule = /** @class */ (function () {
        function AngularWebStorageModule() {
        }
        AngularWebStorageModule.decorators = [
            { type: i0.NgModule }
        ];
        return AngularWebStorageModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.LocalStorage = LocalStorage;
    exports.SessionStorage = SessionStorage;
    exports.StorageService = StorageService;
    exports.LocalStorageService = LocalStorageService;
    exports.SessionStorageService = SessionStorageService;
    exports.AngularWebStorageModule = AngularWebStorageModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,