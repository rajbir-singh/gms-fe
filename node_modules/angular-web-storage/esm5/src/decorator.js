import { StorageUtil } from './util';
var cache = {};
function WebStorage(storage, key, expiredAt, expiredUnit) {
    if (expiredAt === void 0) { expiredAt = 0; }
    if (expiredUnit === void 0) { expiredUnit = 'd'; }
    return function (target, propertyName) {
        key = key || propertyName;
        Object.defineProperty(target, propertyName, {
            get: function () {
                return StorageUtil.get(storage, key);
            },
            set: function (value) {
                if (!cache[key]) {
                    var storedValue = StorageUtil.get(storage, key);
                    if (storedValue === null) {
                        StorageUtil.set(storage, key, value, expiredAt, expiredUnit);
                    }
                    cache[key] = true;
                    return;
                }
                StorageUtil.set(storage, key, value, expiredAt, expiredUnit);
            },
            enumerable: true,
            configurable: true,
        });
    };
}
/**
 * localStorage 装饰器
 *
 * @param [key] 指定一个新key
 * @param [expiredAt=0] 过期时间值，0表示永久有效。
 * @param [expiredUnit='t'] 过期时间单位（默认：自定义[单位：毫秒]）
 */
export function LocalStorage(key, expiredAt, expiredUnit) {
    if (expiredAt === void 0) { expiredAt = 0; }
    if (expiredUnit === void 0) { expiredUnit = 't'; }
    return WebStorage(localStorage, key, expiredAt, expiredUnit);
}
/**
 * sessionStorage 装饰器
 *
 * @param [key] 指定一个新key
 * @param [expiredAt=0] 过期时间值，0表示在 `sessionStorage` 有效时期范围内永久有效。
 * @param [expiredUnit='t'] 过期时间单位（默认：自定义[单位：毫秒]）
 */
export function SessionStorage(key, expiredAt, expiredUnit) {
    if (expiredAt === void 0) { expiredAt = 0; }
    if (expiredUnit === void 0) { expiredUnit = 't'; }
    return WebStorage(sessionStorage, key, expiredAt, expiredUnit);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb3JhdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci13ZWItc3RvcmFnZS8iLCJzb3VyY2VzIjpbInNyYy9kZWNvcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFlLFdBQVcsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUtsRCxJQUFNLEtBQUssR0FBVyxFQUFFLENBQUM7QUFFekIsU0FBUyxVQUFVLENBQ2pCLE9BQWdCLEVBQ2hCLEdBQVcsRUFDWCxTQUFxQixFQUNyQixXQUE4QjtJQUQ5QiwwQkFBQSxFQUFBLGFBQXFCO0lBQ3JCLDRCQUFBLEVBQUEsaUJBQThCO0lBRTlCLE9BQU8sVUFBQyxNQUFjLEVBQUUsWUFBb0I7UUFDMUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxZQUFZLENBQUM7UUFDMUIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsWUFBWSxFQUFFO1lBQzFDLEdBQUcsRUFBRTtnQkFDSCxPQUFPLFdBQVcsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFVLEdBQUcsQ0FBQyxDQUFDO1lBQy9DLENBQUM7WUFDRCxHQUFHLEVBQUUsVUFBQyxLQUFVO2dCQUNkLElBQUksQ0FBQyxLQUFLLENBQVMsR0FBRyxDQUFDLEVBQUU7b0JBQ3ZCLElBQU0sV0FBVyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFVLEdBQUcsQ0FBQyxDQUFDO29CQUMxRCxJQUFJLFdBQVcsS0FBSyxJQUFJLEVBQUU7d0JBQ3hCLFdBQVcsQ0FBQyxHQUFHLENBQ2IsT0FBTyxFQUNDLEdBQUcsRUFDWCxLQUFLLEVBQ0wsU0FBUyxFQUNULFdBQVcsQ0FDWixDQUFDO3FCQUNIO29CQUNELEtBQUssQ0FBUyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7b0JBQzFCLE9BQU87aUJBQ1I7Z0JBQ0QsV0FBVyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQVUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7WUFDdkUsQ0FBQztZQUNELFVBQVUsRUFBRSxJQUFJO1lBQ2hCLFlBQVksRUFBRSxJQUFJO1NBQ25CLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsWUFBWSxDQUMxQixHQUFZLEVBQ1osU0FBcUIsRUFDckIsV0FBOEI7SUFEOUIsMEJBQUEsRUFBQSxhQUFxQjtJQUNyQiw0QkFBQSxFQUFBLGlCQUE4QjtJQUU5QixPQUFPLFVBQVUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztBQUMvRCxDQUFDO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsTUFBTSxVQUFVLGNBQWMsQ0FDNUIsR0FBWSxFQUNaLFNBQXFCLEVBQ3JCLFdBQThCO0lBRDlCLDBCQUFBLEVBQUEsYUFBcUI7SUFDckIsNEJBQUEsRUFBQSxpQkFBOEI7SUFFOUIsT0FBTyxVQUFVLENBQUMsY0FBYyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDakUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4cGlyZWRVbml0LCBTdG9yYWdlVXRpbCB9IGZyb20gJy4vdXRpbCc7XHJcblxyXG5pbnRlcmZhY2UgSUNhY2hlIHtcclxuICBba2V5OiBzdHJpbmddOiBib29sZWFuO1xyXG59XHJcbmNvbnN0IGNhY2hlOiBJQ2FjaGUgPSB7fTtcclxuXHJcbmZ1bmN0aW9uIFdlYlN0b3JhZ2UoXHJcbiAgc3RvcmFnZTogU3RvcmFnZSxcclxuICBrZXk6IHN0cmluZyxcclxuICBleHBpcmVkQXQ6IG51bWJlciA9IDAsXHJcbiAgZXhwaXJlZFVuaXQ6IEV4cGlyZWRVbml0ID0gJ2QnLFxyXG4pIHtcclxuICByZXR1cm4gKHRhcmdldDogT2JqZWN0LCBwcm9wZXJ0eU5hbWU6IHN0cmluZyk6IHZvaWQgPT4ge1xyXG4gICAga2V5ID0ga2V5IHx8IHByb3BlcnR5TmFtZTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5TmFtZSwge1xyXG4gICAgICBnZXQ6ICgpID0+IHtcclxuICAgICAgICByZXR1cm4gU3RvcmFnZVV0aWwuZ2V0KHN0b3JhZ2UsIDxzdHJpbmc+a2V5KTtcclxuICAgICAgfSxcclxuICAgICAgc2V0OiAodmFsdWU6IGFueSkgPT4ge1xyXG4gICAgICAgIGlmICghY2FjaGVbPHN0cmluZz5rZXldKSB7XHJcbiAgICAgICAgICBjb25zdCBzdG9yZWRWYWx1ZSA9IFN0b3JhZ2VVdGlsLmdldChzdG9yYWdlLCA8c3RyaW5nPmtleSk7XHJcbiAgICAgICAgICBpZiAoc3RvcmVkVmFsdWUgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgU3RvcmFnZVV0aWwuc2V0KFxyXG4gICAgICAgICAgICAgIHN0b3JhZ2UsXHJcbiAgICAgICAgICAgICAgPHN0cmluZz5rZXksXHJcbiAgICAgICAgICAgICAgdmFsdWUsXHJcbiAgICAgICAgICAgICAgZXhwaXJlZEF0LFxyXG4gICAgICAgICAgICAgIGV4cGlyZWRVbml0LFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgY2FjaGVbPHN0cmluZz5rZXldID0gdHJ1ZTtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgU3RvcmFnZVV0aWwuc2V0KHN0b3JhZ2UsIDxzdHJpbmc+a2V5LCB2YWx1ZSwgZXhwaXJlZEF0LCBleHBpcmVkVW5pdCk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIH0pO1xyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBsb2NhbFN0b3JhZ2Ug6KOF6aWw5ZmoXHJcbiAqXHJcbiAqIEBwYXJhbSBba2V5XSDmjIflrprkuIDkuKrmlrBrZXlcclxuICogQHBhcmFtIFtleHBpcmVkQXQ9MF0g6L+H5pyf5pe26Ze05YC877yMMOihqOekuuawuOS5heacieaViOOAglxyXG4gKiBAcGFyYW0gW2V4cGlyZWRVbml0PSd0J10g6L+H5pyf5pe26Ze05Y2V5L2N77yI6buY6K6k77ya6Ieq5a6a5LmJW+WNleS9je+8muavq+enkl3vvIlcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBMb2NhbFN0b3JhZ2UoXHJcbiAga2V5Pzogc3RyaW5nLFxyXG4gIGV4cGlyZWRBdDogbnVtYmVyID0gMCxcclxuICBleHBpcmVkVW5pdDogRXhwaXJlZFVuaXQgPSAndCcsXHJcbikge1xyXG4gIHJldHVybiBXZWJTdG9yYWdlKGxvY2FsU3RvcmFnZSwga2V5LCBleHBpcmVkQXQsIGV4cGlyZWRVbml0KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIHNlc3Npb25TdG9yYWdlIOijhemlsOWZqFxyXG4gKlxyXG4gKiBAcGFyYW0gW2tleV0g5oyH5a6a5LiA5Liq5pawa2V5XHJcbiAqIEBwYXJhbSBbZXhwaXJlZEF0PTBdIOi/h+acn+aXtumXtOWAvO+8jDDooajnpLrlnKggYHNlc3Npb25TdG9yYWdlYCDmnInmlYjml7bmnJ/ojIPlm7TlhoXmsLjkuYXmnInmlYjjgIJcclxuICogQHBhcmFtIFtleHBpcmVkVW5pdD0ndCddIOi/h+acn+aXtumXtOWNleS9je+8iOm7mOiupO+8muiHquWumuS5iVvljZXkvY3vvJrmr6vnp5Jd77yJXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gU2Vzc2lvblN0b3JhZ2UoXHJcbiAga2V5Pzogc3RyaW5nLFxyXG4gIGV4cGlyZWRBdDogbnVtYmVyID0gMCxcclxuICBleHBpcmVkVW5pdDogRXhwaXJlZFVuaXQgPSAndCcsXHJcbikge1xyXG4gIHJldHVybiBXZWJTdG9yYWdlKHNlc3Npb25TdG9yYWdlLCBrZXksIGV4cGlyZWRBdCwgZXhwaXJlZFVuaXQpO1xyXG59XHJcbiJdfQ==